When an LEDâ€™s column wire is set to positive and the row wire is set to 0 the LED will turn
on.

void loop () {
  Serial.print("iteration"); 
  Serial.println();
  //the row # 1 and col # 1 of the LEDs turn on 
  digitalWrite(row1, HIGH); 
  digitalWrite(row2, LOW); 
  digitalWrite(row3, LOW); 
  digitalWrite(row4, LOW); 
  digitalWrite(row5, LOW); 
  digitalWrite(row6, LOW); 
  digitalWrite(row7, LOW); 
  digitalWrite(row8, LOW); 
  digitalWrite(col1, LOW); 
  digitalWrite(col2, HIGH); 
  digitalWrite(col3, HIGH); 
  digitalWrite(col4, HIGH); 
  digitalWrite(col5, HIGH); 
  digitalWrite(col6, HIGH); 
  digitalWrite(col7, HIGH); 
  digitalWrite(col8, HIGH); 
  delay(1000); 
  
  //turn off all  
  blank_screen();

  
  delay(1000); 
}


- (setup) add pillar to queue
- shift all pillars left
- if right most pillar is far away enough to trigger hrzDistance => add new pillar to queue
- if left most pillar is out of range => dequeue
- hitbox detection
- draw new frame

new pillar concept
- possibly allocate 8 pillars on the stack, then decide visibility, perhaps via bool
- 

----

-bottom pillar: select random pillar height
- bottom_pillar_height + holeSize = starting height of top pillar
- somehow cutoff excess top pillar height


// Der Array hat 10 Elemente mit jeweils 8 Bytes. Die erste Array Dimension steht fuer
// einen ganzen Buchstaben bzw. ein ganzes Pattern. Mit der zweiten Dimension kann
// man auf die einzelnen Bytes zu greifen, welche jeweils eine ganze Column des Patterns repraesentieren
// Heisst: data_ascii[pattern][column]